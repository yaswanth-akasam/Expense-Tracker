// Generated by view binder compiler. Do not edit!
package com.expensetracker.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.expensetracker.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityCategoryExpensesBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final LinearLayout categoryHeader;

  @NonNull
  public final RecyclerView recyclerViewExpenses;

  @NonNull
  public final TextView textCategoryName;

  @NonNull
  public final TextView textExpenseCount;

  @NonNull
  public final TextView textTotalAmount;

  private ActivityCategoryExpensesBinding(@NonNull ConstraintLayout rootView,
      @NonNull LinearLayout categoryHeader, @NonNull RecyclerView recyclerViewExpenses,
      @NonNull TextView textCategoryName, @NonNull TextView textExpenseCount,
      @NonNull TextView textTotalAmount) {
    this.rootView = rootView;
    this.categoryHeader = categoryHeader;
    this.recyclerViewExpenses = recyclerViewExpenses;
    this.textCategoryName = textCategoryName;
    this.textExpenseCount = textExpenseCount;
    this.textTotalAmount = textTotalAmount;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityCategoryExpensesBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityCategoryExpensesBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_category_expenses, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityCategoryExpensesBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.category_header;
      LinearLayout categoryHeader = ViewBindings.findChildViewById(rootView, id);
      if (categoryHeader == null) {
        break missingId;
      }

      id = R.id.recycler_view_expenses;
      RecyclerView recyclerViewExpenses = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewExpenses == null) {
        break missingId;
      }

      id = R.id.text_category_name;
      TextView textCategoryName = ViewBindings.findChildViewById(rootView, id);
      if (textCategoryName == null) {
        break missingId;
      }

      id = R.id.text_expense_count;
      TextView textExpenseCount = ViewBindings.findChildViewById(rootView, id);
      if (textExpenseCount == null) {
        break missingId;
      }

      id = R.id.text_total_amount;
      TextView textTotalAmount = ViewBindings.findChildViewById(rootView, id);
      if (textTotalAmount == null) {
        break missingId;
      }

      return new ActivityCategoryExpensesBinding((ConstraintLayout) rootView, categoryHeader,
          recyclerViewExpenses, textCategoryName, textExpenseCount, textTotalAmount);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
