// Generated by view binder compiler. Do not edit!
package com.expensetracker.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.expensetracker.R;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAddExpenseBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button buttonCancel;

  @NonNull
  public final Button buttonSave;

  @NonNull
  public final Button buttonSelectDate;

  @NonNull
  public final Button buttonSelectTime;

  @NonNull
  public final TextInputEditText editTextAmount;

  @NonNull
  public final TextInputEditText editTextNote;

  @NonNull
  public final TextInputLayout layoutAmount;

  @NonNull
  public final TextInputLayout layoutNote;

  @NonNull
  public final Spinner spinnerCategory;

  @NonNull
  public final TextView textCategoryLabel;

  @NonNull
  public final TextView textDateLabel;

  @NonNull
  public final TextView textSelectedDate;

  @NonNull
  public final TextView textSelectedTime;

  @NonNull
  public final TextView textTitle;

  private ActivityAddExpenseBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button buttonCancel, @NonNull Button buttonSave, @NonNull Button buttonSelectDate,
      @NonNull Button buttonSelectTime, @NonNull TextInputEditText editTextAmount,
      @NonNull TextInputEditText editTextNote, @NonNull TextInputLayout layoutAmount,
      @NonNull TextInputLayout layoutNote, @NonNull Spinner spinnerCategory,
      @NonNull TextView textCategoryLabel, @NonNull TextView textDateLabel,
      @NonNull TextView textSelectedDate, @NonNull TextView textSelectedTime,
      @NonNull TextView textTitle) {
    this.rootView = rootView;
    this.buttonCancel = buttonCancel;
    this.buttonSave = buttonSave;
    this.buttonSelectDate = buttonSelectDate;
    this.buttonSelectTime = buttonSelectTime;
    this.editTextAmount = editTextAmount;
    this.editTextNote = editTextNote;
    this.layoutAmount = layoutAmount;
    this.layoutNote = layoutNote;
    this.spinnerCategory = spinnerCategory;
    this.textCategoryLabel = textCategoryLabel;
    this.textDateLabel = textDateLabel;
    this.textSelectedDate = textSelectedDate;
    this.textSelectedTime = textSelectedTime;
    this.textTitle = textTitle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAddExpenseBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAddExpenseBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_add_expense, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAddExpenseBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_cancel;
      Button buttonCancel = ViewBindings.findChildViewById(rootView, id);
      if (buttonCancel == null) {
        break missingId;
      }

      id = R.id.button_save;
      Button buttonSave = ViewBindings.findChildViewById(rootView, id);
      if (buttonSave == null) {
        break missingId;
      }

      id = R.id.button_select_date;
      Button buttonSelectDate = ViewBindings.findChildViewById(rootView, id);
      if (buttonSelectDate == null) {
        break missingId;
      }

      id = R.id.button_select_time;
      Button buttonSelectTime = ViewBindings.findChildViewById(rootView, id);
      if (buttonSelectTime == null) {
        break missingId;
      }

      id = R.id.edit_text_amount;
      TextInputEditText editTextAmount = ViewBindings.findChildViewById(rootView, id);
      if (editTextAmount == null) {
        break missingId;
      }

      id = R.id.edit_text_note;
      TextInputEditText editTextNote = ViewBindings.findChildViewById(rootView, id);
      if (editTextNote == null) {
        break missingId;
      }

      id = R.id.layout_amount;
      TextInputLayout layoutAmount = ViewBindings.findChildViewById(rootView, id);
      if (layoutAmount == null) {
        break missingId;
      }

      id = R.id.layout_note;
      TextInputLayout layoutNote = ViewBindings.findChildViewById(rootView, id);
      if (layoutNote == null) {
        break missingId;
      }

      id = R.id.spinner_category;
      Spinner spinnerCategory = ViewBindings.findChildViewById(rootView, id);
      if (spinnerCategory == null) {
        break missingId;
      }

      id = R.id.text_category_label;
      TextView textCategoryLabel = ViewBindings.findChildViewById(rootView, id);
      if (textCategoryLabel == null) {
        break missingId;
      }

      id = R.id.text_date_label;
      TextView textDateLabel = ViewBindings.findChildViewById(rootView, id);
      if (textDateLabel == null) {
        break missingId;
      }

      id = R.id.text_selected_date;
      TextView textSelectedDate = ViewBindings.findChildViewById(rootView, id);
      if (textSelectedDate == null) {
        break missingId;
      }

      id = R.id.text_selected_time;
      TextView textSelectedTime = ViewBindings.findChildViewById(rootView, id);
      if (textSelectedTime == null) {
        break missingId;
      }

      id = R.id.text_title;
      TextView textTitle = ViewBindings.findChildViewById(rootView, id);
      if (textTitle == null) {
        break missingId;
      }

      return new ActivityAddExpenseBinding((ConstraintLayout) rootView, buttonCancel, buttonSave,
          buttonSelectDate, buttonSelectTime, editTextAmount, editTextNote, layoutAmount,
          layoutNote, spinnerCategory, textCategoryLabel, textDateLabel, textSelectedDate,
          textSelectedTime, textTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
