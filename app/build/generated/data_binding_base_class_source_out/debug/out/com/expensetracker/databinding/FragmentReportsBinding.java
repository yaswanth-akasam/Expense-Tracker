// Generated by view binder compiler. Do not edit!
package com.expensetracker.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.expensetracker.R;
import com.expensetracker.ui.PieChartView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentReportsBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final LinearLayout layoutCategories;

  @NonNull
  public final PieChartView pieChart;

  @NonNull
  public final TextView textMonth;

  @NonNull
  public final TextView textTotalAmount;

  private FragmentReportsBinding(@NonNull ScrollView rootView,
      @NonNull LinearLayout layoutCategories, @NonNull PieChartView pieChart,
      @NonNull TextView textMonth, @NonNull TextView textTotalAmount) {
    this.rootView = rootView;
    this.layoutCategories = layoutCategories;
    this.pieChart = pieChart;
    this.textMonth = textMonth;
    this.textTotalAmount = textTotalAmount;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentReportsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentReportsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_reports, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentReportsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.layout_categories;
      LinearLayout layoutCategories = ViewBindings.findChildViewById(rootView, id);
      if (layoutCategories == null) {
        break missingId;
      }

      id = R.id.pie_chart;
      PieChartView pieChart = ViewBindings.findChildViewById(rootView, id);
      if (pieChart == null) {
        break missingId;
      }

      id = R.id.text_month;
      TextView textMonth = ViewBindings.findChildViewById(rootView, id);
      if (textMonth == null) {
        break missingId;
      }

      id = R.id.text_total_amount;
      TextView textTotalAmount = ViewBindings.findChildViewById(rootView, id);
      if (textTotalAmount == null) {
        break missingId;
      }

      return new FragmentReportsBinding((ScrollView) rootView, layoutCategories, pieChart,
          textMonth, textTotalAmount);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
