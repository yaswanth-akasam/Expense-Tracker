// Generated by view binder compiler. Do not edit!
package com.expensetracker.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.expensetracker.R;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemExpenseBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final ImageButton buttonDelete;

  @NonNull
  public final ImageButton buttonEdit;

  @NonNull
  public final View categoryIndicator;

  @NonNull
  public final LinearLayout layoutActions;

  @NonNull
  public final TextView textAmount;

  @NonNull
  public final TextView textCategory;

  @NonNull
  public final TextView textDateTime;

  @NonNull
  public final TextView textNote;

  private ItemExpenseBinding(@NonNull MaterialCardView rootView, @NonNull ImageButton buttonDelete,
      @NonNull ImageButton buttonEdit, @NonNull View categoryIndicator,
      @NonNull LinearLayout layoutActions, @NonNull TextView textAmount,
      @NonNull TextView textCategory, @NonNull TextView textDateTime, @NonNull TextView textNote) {
    this.rootView = rootView;
    this.buttonDelete = buttonDelete;
    this.buttonEdit = buttonEdit;
    this.categoryIndicator = categoryIndicator;
    this.layoutActions = layoutActions;
    this.textAmount = textAmount;
    this.textCategory = textCategory;
    this.textDateTime = textDateTime;
    this.textNote = textNote;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemExpenseBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemExpenseBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_expense, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemExpenseBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_delete;
      ImageButton buttonDelete = ViewBindings.findChildViewById(rootView, id);
      if (buttonDelete == null) {
        break missingId;
      }

      id = R.id.button_edit;
      ImageButton buttonEdit = ViewBindings.findChildViewById(rootView, id);
      if (buttonEdit == null) {
        break missingId;
      }

      id = R.id.category_indicator;
      View categoryIndicator = ViewBindings.findChildViewById(rootView, id);
      if (categoryIndicator == null) {
        break missingId;
      }

      id = R.id.layout_actions;
      LinearLayout layoutActions = ViewBindings.findChildViewById(rootView, id);
      if (layoutActions == null) {
        break missingId;
      }

      id = R.id.text_amount;
      TextView textAmount = ViewBindings.findChildViewById(rootView, id);
      if (textAmount == null) {
        break missingId;
      }

      id = R.id.text_category;
      TextView textCategory = ViewBindings.findChildViewById(rootView, id);
      if (textCategory == null) {
        break missingId;
      }

      id = R.id.text_date_time;
      TextView textDateTime = ViewBindings.findChildViewById(rootView, id);
      if (textDateTime == null) {
        break missingId;
      }

      id = R.id.text_note;
      TextView textNote = ViewBindings.findChildViewById(rootView, id);
      if (textNote == null) {
        break missingId;
      }

      return new ItemExpenseBinding((MaterialCardView) rootView, buttonDelete, buttonEdit,
          categoryIndicator, layoutActions, textAmount, textCategory, textDateTime, textNote);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
